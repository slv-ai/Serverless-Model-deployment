name : deploy lambda
on:
  push:
    branches:
      -main
jobs:
  build and deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      ECR_REPO_NAME: churnprediction-model-repo
      AWS_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform
      
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform
        env:
          TF_VAR_project_name: ${{ env.PROJECT_NAME }}
          TF_VAR_environment: ${{ env.ENVIRONMENT }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPO_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REPOSITORY:$IMAGE_TAG

      - name: Update Lambda function code
        run: |
          aws lambda update-function-code \
           --function-name churn-prediction-lambda \
           --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:latest \
           --region $AWS_REGION